-- This file has been generated by CocoSim compiler + verifier

-- Constants declarations
-- 	constants file: /home/arnaud/data/work/repositories/bitbucket/NASA2015/coco-simulink/usecases/tcm/sliced_model/constant
const ap_altcmd = 1.0000000000;
const ap_alteng = 1.0000000000;
const ap_FPAeng = 1.0000000000;
const ap_fpacmd = 1.0000000000;
const ap_headcmd = 1.0000000000;
const ap_headeng = 1.0000000000;
const ap_throteng = 1.0000000000;
const bias_throttle = 1.0000000000;


-- Properties nodes
node Longitudinal_Guide_130_Guide_130 (qbdegf_1_1 : real; CAS_1_1 : real; FpaEng_1_1 : bool; FPACmd_1_1 : real; gamINS_degf_1_1 : real; tas_ktsf_1_1 : real; thetadegf_1_1 : real; ElevStick_1_1 : real; maxHdotChg_1_1 : real; hdotChgRate_1_1 : real; hdot_fpsf_1_1 : real; GSktsf_1_1 : real; alt_ft_f_1_1 : real; AltCmd_1_1 : real; AntEng_1_1 : bool)
returns (Guide_120_1_1 : bool)
var
	Constant1_1_1 : real;
	Constant2_1_1 : real;
	LogicalOperator10_1_1 : bool;
	LogicalOperator11_1_1 : bool;
	LogicalOperator12_1_1 : bool;
	RelationalOperator1_1_1 : bool;
	RelationalOperator2_1_1 : bool;
	ElevCmd_1_1 : real;
let
	-- Trace_begin: Longitudinal_Guide_130/Guide_130/Constant1;
	Constant1_1_1 = 0.0000000000;
	-- Trace_end: Longitudinal_Guide_130/Guide_130/Constant1;
	-- Trace_begin: Longitudinal_Guide_130/Guide_130/Constant2;
	Constant2_1_1 = 0.0000000000;
	-- Trace_end: Longitudinal_Guide_130/Guide_130/Constant2;
	-- Trace_begin: Longitudinal_Guide_130/Guide_130/LogicalOperator10;
	LogicalOperator10_1_1 = FpaEng_1_1 and RelationalOperator1_1_1;
	-- Trace_end: Longitudinal_Guide_130/Guide_130/LogicalOperator10;
	-- Trace_begin: Longitudinal_Guide_130/Guide_130/LogicalOperator11;
	LogicalOperator11_1_1 = not LogicalOperator10_1_1;
	-- Trace_end: Longitudinal_Guide_130/Guide_130/LogicalOperator11;
	-- Trace_begin: Longitudinal_Guide_130/Guide_130/LogicalOperator12;
	LogicalOperator12_1_1 = LogicalOperator11_1_1 or RelationalOperator2_1_1;
	-- Trace_end: Longitudinal_Guide_130/Guide_130/LogicalOperator12;
	-- Trace_begin: Longitudinal_Guide_130/Guide_130/RelationalOperator1;
	RelationalOperator1_1_1 = FPACmd_1_1 > Constant1_1_1;
	-- Trace_end: Longitudinal_Guide_130/Guide_130/RelationalOperator1;
	-- Trace_begin: Longitudinal_Guide_130/Guide_130/RelationalOperator2;
	RelationalOperator2_1_1 = ElevCmd_1_1 > Constant2_1_1;
	-- Trace_end: Longitudinal_Guide_130/Guide_130/RelationalOperator2;
	-- Trace_begin: Longitudinal_Guide_130/Guide_130/Guide_120;
	Guide_120_1_1 = LogicalOperator12_1_1;
	-- Trace_end: Longitudinal_Guide_130/Guide_130/Guide_120;

	ElevCmd_1_1 = Longitudinal_Guide_130(FPACmd_1_1, AntEng_1_1, FpaEng_1_1, AltCmd_1_1, alt_ft_f_1_1, thetadegf_1_1, qbdegf_1_1, GSktsf_1_1, hdot_fpsf_1_1, tas_ktsf_1_1, gamINS_degf_1_1, CAS_1_1, ElevStick_1_1, hdotChgRate_1_1, maxHdotChg_1_1);
	--!PROPERTY: Guide_120_1_1 = true;
tel

-- System nodes
node Longitudinal_Guide_130_PitchInnerLoop_TransferFcn_pp (Inport1_1_1 : real; )
returns (Outport1_1_1 : real) 
var
	D1_1_1 : real;
	GainAC1_1_1_1 : real;
	GainAC2_1_1_1 : real;
	GainBD1_1_1_1 : real;
	GainBD2_1_1_1 : real;
	Sum1_1_1 : real;
	Sum2_1_1 : real;
let 
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/D1;
	D1_1_1 = 0.0000000000 -> pre Sum1_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/D1;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/GainAC1_1;
	GainAC1_1_1_1 = -0.0625000000 * D1_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/GainAC1_1;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/GainAC2_1;
	GainAC2_1_1_1 = -0.0625000000 * D1_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/GainAC2_1;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/GainBD1_1;
	GainBD1_1_1_1 = 1.0000000000 * Inport1_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/GainBD1_1;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/GainBD2_1;
	GainBD2_1_1_1 = 1.0000000000 * Inport1_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/GainBD2_1;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/Sum1;
	Sum1_1_1 =  GainAC1_1_1_1 + GainBD1_1_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/Sum1;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/Sum2;
	Sum2_1_1 =  GainAC2_1_1_1 + GainBD2_1_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/Sum2;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/Outport1;
	Outport1_1_1 = Sum2_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp/Outport1;
tel

node Longitudinal_Guide_130_PitchInnerLoop_Kcas_pp (In_1_1 : real; )
returns (Out_1_1 : real) 
var
	CompInfEq2_1_1 : bool;
	CompInfEq3_1_1 : bool;
	CompInfEq4_1_1 : bool;
	CompSup1_1_1 : bool;
	CompSup2_1_1 : bool;
	CompSup3_1_1 : bool;
	Data1_1_1 : real;
	Data2_1_1 : real;
	Data3_1_1 : real;
	Data4_1_1 : real;
	Idx1_1_1 : real;
	Idx2_1_1 : real;
	Idx3_1_1 : real;
	Idx4_1_1 : real;
	Product1_1_1 : real;
	Product2_1_1 : real;
	Product3_1_1 : real;
	Interpolate3_Interpolate_1_1 : real;
	Interpolate3_Sum1_1_1 : real;
	Interpolate3_Sum2_1_1 : real;
	Interpolate3_Sum3_1_1 : real;
	Interpolate3_Sum4_1_1 : real;
	Interpolate2_Interpolate_1_1 : real;
	Interpolate2_Sum1_1_1 : real;
	Interpolate2_Sum2_1_1 : real;
	Interpolate2_Sum3_1_1 : real;
	Interpolate2_Sum4_1_1 : real;
	Interpolate1_Interpolate_1_1 : real;
	Interpolate1_Sum1_1_1 : real;
	Interpolate1_Sum2_1_1 : real;
	Interpolate1_Sum3_1_1 : real;
	Interpolate1_Sum4_1_1 : real;
	Sum_1_1 : real;
let 
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/CompInfEq2;
	CompInfEq2_1_1 = In_1_1 <= Idx2_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/CompInfEq2;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/CompInfEq3;
	CompInfEq3_1_1 = In_1_1 <= Idx3_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/CompInfEq3;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/CompInfEq4;
	CompInfEq4_1_1 = In_1_1 <= Idx4_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/CompInfEq4;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/CompSup1;
	CompSup1_1_1 = In_1_1 >= Idx1_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/CompSup1;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/CompSup2;
	CompSup2_1_1 = In_1_1 > Idx2_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/CompSup2;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/CompSup3;
	CompSup3_1_1 = In_1_1 > Idx3_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/CompSup3;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Data1;
	Data1_1_1 = 1.0000000000;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Data1;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Data2;
	Data2_1_1 = 1.0000000000;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Data2;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Data3;
	Data3_1_1 = 0.3000000000;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Data3;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Data4;
	Data4_1_1 = 0.3000000000;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Data4;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Idx1;
	Idx1_1_1 = 0.0000000000;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Idx1;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Idx2;
	Idx2_1_1 = 120.0000000000;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Idx2;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Idx3;
	Idx3_1_1 = 350.0000000000;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Idx3;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Idx4;
	Idx4_1_1 = 500.0000000000;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Idx4;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Product1;
	Product1_1_1 = Interpolate1_Sum4_1_1 * (if CompSup1_1_1 then 1.0 else 0.0) * (if CompInfEq2_1_1 then 1.0 else 0.0);
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Product1;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Product2;
	Product2_1_1 = Interpolate2_Sum4_1_1 * (if CompSup2_1_1 then 1.0 else 0.0) * (if CompInfEq3_1_1 then 1.0 else 0.0);
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Product2;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Product3;
	Product3_1_1 = Interpolate3_Sum4_1_1 * (if CompSup3_1_1 then 1.0 else 0.0) * (if CompInfEq4_1_1 then 1.0 else 0.0);
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Product3;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate3/Interpolate;
	Interpolate3_Interpolate_1_1 = Interpolate3_Sum1_1_1 / Interpolate3_Sum2_1_1 * Interpolate3_Sum3_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate3/Interpolate;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate3/Sum1;
	Interpolate3_Sum1_1_1 =  In_1_1 - Idx3_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate3/Sum1;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate3/Sum2;
	Interpolate3_Sum2_1_1 =  - Idx3_1_1 + Idx4_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate3/Sum2;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate3/Sum3;
	Interpolate3_Sum3_1_1 =  - Data3_1_1 + Data4_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate3/Sum3;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate3/Sum4;
	Interpolate3_Sum4_1_1 =  Interpolate3_Interpolate_1_1 + Data3_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate3/Sum4;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate2/Interpolate;
	Interpolate2_Interpolate_1_1 = Interpolate2_Sum1_1_1 / Interpolate2_Sum2_1_1 * Interpolate2_Sum3_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate2/Interpolate;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate2/Sum1;
	Interpolate2_Sum1_1_1 =  In_1_1 - Idx2_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate2/Sum1;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate2/Sum2;
	Interpolate2_Sum2_1_1 =  - Idx2_1_1 + Idx3_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate2/Sum2;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate2/Sum3;
	Interpolate2_Sum3_1_1 =  - Data2_1_1 + Data3_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate2/Sum3;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate2/Sum4;
	Interpolate2_Sum4_1_1 =  Interpolate2_Interpolate_1_1 + Data2_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate2/Sum4;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate1/Interpolate;
	Interpolate1_Interpolate_1_1 = Interpolate1_Sum1_1_1 / Interpolate1_Sum2_1_1 * Interpolate1_Sum3_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate1/Interpolate;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate1/Sum1;
	Interpolate1_Sum1_1_1 =  In_1_1 - Idx1_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate1/Sum1;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate1/Sum2;
	Interpolate1_Sum2_1_1 =  - Idx1_1_1 + Idx2_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate1/Sum2;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate1/Sum3;
	Interpolate1_Sum3_1_1 =  - Data1_1_1 + Data2_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate1/Sum3;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate1/Sum4;
	Interpolate1_Sum4_1_1 =  Interpolate1_Interpolate_1_1 + Data1_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Interpolate1/Sum4;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Sum;
	Sum_1_1 =  Product1_1_1 + Product2_1_1 + Product3_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Sum;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Out;
	Out_1_1 = Sum_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp/Out;
tel

node Longitudinal_Guide_130_PitchInnerLoop (PitchCmd_1_1 : real; Pitch_1_1 : real; qdeg_1_1 : real; CAS_1_1 : real; )
returns (ElevCmd_1_1 : real) 
var
	Kcas_pp_1_1 : real;
	Kpitch_1_1 : real;
	Kwo_1_1 : real;
	Mux_1_1 : real; Mux_1_2 : real;
	Product_1_1 : real;
	Sum_1_1 : real;
	Sum1_1_1 : real;
	TransferFcn_pp_1_1 : real;
let 
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp;
	(Kcas_pp_1_1) = Longitudinal_Guide_130_PitchInnerLoop_Kcas_pp(CAS_1_1);
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kcas_pp;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kpitch;
	Kpitch_1_1 = 2.0000000000 * Sum_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kpitch;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Kwo;
	Kwo_1_1 = 0.5000000000 * TransferFcn_pp_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Kwo;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Mux;
	Mux_1_1 = PitchCmd_1_1 ;
	Mux_1_2 = Pitch_1_1 ;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Mux;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Product;
	Product_1_1 = Sum1_1_1 * Kcas_pp_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Product;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Sum;
	Sum_1_1 =  PitchCmd_1_1 - Pitch_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Sum;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/Sum1;
	Sum1_1_1 =  - Kpitch_1_1 + Kwo_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/Sum1;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp;
	(TransferFcn_pp_1_1) = Longitudinal_Guide_130_PitchInnerLoop_TransferFcn_pp(qdeg_1_1);
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/TransferFcn_pp;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop/ElevCmd;
	ElevCmd_1_1 = Product_1_1;
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop/ElevCmd;
tel

node Longitudinal_Guide_130_FPAControl (engage_1_1 : bool; gamcmd_1_1 : real; gamma_1_1 : real; thetadeg_1_1 : real; VT_1_1 : real; )
returns (PitchCmd_1_1 : real) 
var
	Integ_FPA_1_1 : real;
	KIgamerr_1_1 : real;
	Kgamerr_1_1 : real;
	LogicalOperator_1_1 : bool;
	Mux_1_1 : real; Mux_1_2 : real;
	Mux1_1_1 : real; Mux1_1_2 : real;
	Product1_1_1 : real;
	SaturationDynamic_1_1 : real;
	Sum_1_1 : real;
	Sum1_1_1 : real;
	Sum2_1_1 : real;
	hddLim_1_1 : real;
	kt2fps_1_1 : real;
	m1_1_1 : real;
let 
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/Integ_FPA;
	Integ_FPA_1_1 = Sum_1_1 -> if LogicalOperator_1_1 then Sum_1_1 else (1.0000000000 * 1.0000000000) + pre SaturationDynamic_1_1;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/Integ_FPA;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/KIgamerr;
	KIgamerr_1_1 = 1.0000000000 * Sum2_1_1;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/KIgamerr;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/Kgamerr;
	Kgamerr_1_1 = 1.4000000000 * gamma_1_1;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/Kgamerr;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/LogicalOperator;
	LogicalOperator_1_1 = not engage_1_1;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/LogicalOperator;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/Mux;
	Mux_1_1 = gamcmd_1_1 ;
	Mux_1_2 = gamma_1_1 ;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/Mux;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/Mux1;
	Mux1_1_1 = Sum2_1_1 ;
	Mux1_1_2 = SaturationDynamic_1_1 ;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/Mux1;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/Product1;
	Product1_1_1 = hddLim_1_1 * kt2fps_1_1;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/Product1;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/SaturationDynamic;
	SaturationDynamic_1_1 = if KIgamerr_1_1 > Product1_1_1 then Product1_1_1
		else if KIgamerr_1_1 < m1_1_1 then m1_1_1
		else KIgamerr_1_1;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/SaturationDynamic;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/Sum;
	Sum_1_1 =  thetadeg_1_1 + Kgamerr_1_1;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/Sum;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/Sum1;
	Sum1_1_1 =  Integ_FPA_1_1 - Kgamerr_1_1;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/Sum1;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/Sum2;
	Sum2_1_1 =  gamcmd_1_1 - gamma_1_1;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/Sum2;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/hddLim;
	hddLim_1_1 = 276.7387140000;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/hddLim;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/kt2fps;
	kt2fps_1_1 = 1.6878000000 * VT_1_1;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/kt2fps;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/m1;
	m1_1_1 = -1.0000000000 * Product1_1_1;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/m1;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl/PitchCmd;
	PitchCmd_1_1 = Sum1_1_1;
	-- Trace_end: Longitudinal_Guide_130/FPAControl/PitchCmd;
tel

node Longitudinal_Guide_130_AltitudeControl_VariableLimitSaturation (up_lim_1_1 : real; SigIn_1_1 : real; Lo_lim_1_1 : real; )
returns (Out1_1_1 : real) 
var
	Enforcelowlim_1_1 : real;
	Enforceuplim_1_1 : real;
let 
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/VariableLimitSaturation/Enforcelowlim;
	Enforcelowlim_1_1 = if Lo_lim_1_1 >= SigIn_1_1 then Lo_lim_1_1 else SigIn_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/VariableLimitSaturation/Enforcelowlim;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/VariableLimitSaturation/Enforceuplim;
	Enforceuplim_1_1 = if Enforcelowlim_1_1 <= up_lim_1_1 then Enforcelowlim_1_1 else up_lim_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/VariableLimitSaturation/Enforceuplim;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/VariableLimitSaturation/Out1;
	Out1_1_1 = Enforceuplim_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/VariableLimitSaturation/Out1;
tel

node Longitudinal_Guide_130_AltitudeControl_VariableRateLimit (ratelim_1_1 : real; input_1_1 : real; ICtrig_1_1 : bool; IC_1_1 : real; )
returns (output_1_1 : real) 
var
	Gain_1_1 : real;
	Gain1_1_1 : real;
	Integrator_1_1 : real;
	Sum2_1_1 : real;
	VariableLimitSaturation_Enforcelowlim_1_1 : real;
	VariableLimitSaturation_Enforceuplim_1_1 : real;
let 
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit/Gain;
	Gain_1_1 = 20.0000000000 * Sum2_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit/Gain;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit/Gain1;
	Gain1_1_1 = -1.0000000000 * ratelim_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit/Gain1;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit/Integrator;
	Integrator_1_1 = IC_1_1 -> if ICtrig_1_1 then IC_1_1 else (1.0000000000 * 1.0000000000) + pre VariableLimitSaturation_Enforceuplim_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit/Integrator;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit/Sum2;
	Sum2_1_1 =  input_1_1 - Integrator_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit/Sum2;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit/VariableLimitSaturation/Enforcelowlim;
	VariableLimitSaturation_Enforcelowlim_1_1 = if Gain1_1_1 >= Gain_1_1 then Gain1_1_1 else Gain_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit/VariableLimitSaturation/Enforcelowlim;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit/VariableLimitSaturation/Enforceuplim;
	VariableLimitSaturation_Enforceuplim_1_1 = if VariableLimitSaturation_Enforcelowlim_1_1 <= ratelim_1_1 then VariableLimitSaturation_Enforcelowlim_1_1 else ratelim_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit/VariableLimitSaturation/Enforceuplim;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit/output;
	output_1_1 = Integrator_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit/output;
tel

node Longitudinal_Guide_130_AltitudeControl (engage_1_1 : bool; AltCmd_1_1 : real; Altitude_1_1 : real; gskts_1_1 : real; hdot_1_1 : real; hdotChgRate_1_1 : real; maxHdotChg_1_1 : real; )
returns (altgamcmd_1_1 : real) 
var
	Abs_1_1 : real;
	Constant1_1_1 : real;
	Divide_1_1 : real;
	Kh_1_1 : real;
	LogicalOperator_1_1 : bool;
	Mux_1_1 : real; Mux_1_2 : real;
	Mux1_1_1 : real; Mux1_1_2 : real;
	Saturation_1_1 : real;
	Sum_1_1 : real;
	Sum3_1_1 : real;
	Switch_1_1 : real;
	VariableRateLimit_1_1 : real;
	VariableLimitSaturation_1_1 : real;
	k_1_1 : real;
	kts2fps_1_1 : real;
	r2d_1_1 : real;
let 
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/Abs;
	Abs_1_1 = if hdot_1_1 >= 0.0 then hdot_1_1 else -hdot_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/Abs;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/Constant1;
	Constant1_1_1 = 0.0000000000;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/Constant1;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/Divide;
	Divide_1_1 = VariableRateLimit_1_1 / Saturation_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/Divide;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/Kh;
	Kh_1_1 = 0.0800000000 * Sum_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/Kh;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/LogicalOperator;
	LogicalOperator_1_1 = not engage_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/LogicalOperator;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/Mux;
	Mux_1_1 = AltCmd_1_1 ;
	Mux_1_2 = Altitude_1_1 ;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/Mux;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/Mux1;
	Mux1_1_1 = VariableLimitSaturation_1_1 ;
	Mux1_1_2 = VariableRateLimit_1_1 ;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/Mux1;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/Saturation;
	Saturation_1_1 =  if kts2fps_1_1 >= 1000.000000 then 1000.000000 
		else if kts2fps_1_1 <= 0.000100 then 0.000100 
		else kts2fps_1_1 ;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/Saturation;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/Sum;
	Sum_1_1 =  AltCmd_1_1 - Altitude_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/Sum;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/Sum3;
	Sum3_1_1 =  Abs_1_1 + maxHdotChg_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/Sum3;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/Switch;
	Switch_1_1 = if engage_1_1 then Kh_1_1 else Constant1_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/Switch;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit;
	(VariableRateLimit_1_1) = Longitudinal_Guide_130_AltitudeControl_VariableRateLimit(hdotChgRate_1_1, VariableLimitSaturation_1_1, LogicalOperator_1_1, hdot_1_1);
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/VariableRateLimit;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/VariableLimitSaturation;
	(VariableLimitSaturation_1_1) = Longitudinal_Guide_130_AltitudeControl_VariableLimitSaturation(Sum3_1_1, Switch_1_1, k_1_1);
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/VariableLimitSaturation;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/k;
	k_1_1 = -1.0000000000 * Sum3_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/k;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/kts2fps;
	kts2fps_1_1 = 1.6878000000 * gskts_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/kts2fps;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/r2d;
	r2d_1_1 = 57.2958000000 * Divide_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/r2d;
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl/altgamcmd;
	altgamcmd_1_1 = r2d_1_1;
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl/altgamcmd;
tel

node Longitudinal_Guide_130 (FPACmd_1_1 : real; AntEng_1_1 : bool; FpaEng_1_1 : bool; AltCmd_1_1 : real; Alt_1_1 : real; thetaDeg_1_1 : real; qDeg_1_1 : real; GsKts_1_1 : real; hdot_1_1 : real; VT_1_1 : real; Gamma_1_1 : real; CAS_1_1 : real; ElevStick_1_1 : real; hdotChgRate_1_1 : real; maxHdotChg_1_1 : real; )
returns (ElevCmd_1_1 : real) 
var
	AltitudeControl_1_1 : real;
	FPAControl_1_1 : real;
	LogicalOperator_1_1 : bool;
	PitchInnerLoop_1_1 : real;
	Sum7_1_1 : real;
	k2_1_1 : real;
	ManualOverride_Switch1_1_1 : real;
	EngageORzero_LogicalOperator5_1_1 : bool;
	EngageORzero_Switch1_1_1 : real;
	EngageORzero_zero10_1_1 : real;
	EngageORzero_zero9_1_1 : real;
	k5_1_1 : real;
let 
	-- Trace_begin: Longitudinal_Guide_130/AltitudeControl;
	(AltitudeControl_1_1) = Longitudinal_Guide_130_AltitudeControl(AntEng_1_1, AltCmd_1_1, Alt_1_1, GsKts_1_1, hdot_1_1, hdotChgRate_1_1, maxHdotChg_1_1);
	-- Trace_end: Longitudinal_Guide_130/AltitudeControl;
	-- Trace_begin: Longitudinal_Guide_130/FPAControl;
	(FPAControl_1_1) = Longitudinal_Guide_130_FPAControl(FpaEng_1_1, Sum7_1_1, Gamma_1_1, thetaDeg_1_1, VT_1_1);
	-- Trace_end: Longitudinal_Guide_130/FPAControl;
	-- Trace_begin: Longitudinal_Guide_130/LogicalOperator;
	LogicalOperator_1_1 = AntEng_1_1 or FpaEng_1_1;
	-- Trace_end: Longitudinal_Guide_130/LogicalOperator;
	-- Trace_begin: Longitudinal_Guide_130/PitchInnerLoop;
	(PitchInnerLoop_1_1) = Longitudinal_Guide_130_PitchInnerLoop(k5_1_1, thetaDeg_1_1, qDeg_1_1, CAS_1_1);
	-- Trace_end: Longitudinal_Guide_130/PitchInnerLoop;
	-- Trace_begin: Longitudinal_Guide_130/Sum7;
	Sum7_1_1 =  FPACmd_1_1 + k2_1_1;
	-- Trace_end: Longitudinal_Guide_130/Sum7;
	-- Trace_begin: Longitudinal_Guide_130/k2;
	k2_1_1 = 1.0000000000 * AltitudeControl_1_1;
	-- Trace_end: Longitudinal_Guide_130/k2;
	-- Trace_begin: Longitudinal_Guide_130/ManualOverride/Switch1;
	ManualOverride_Switch1_1_1 = if not(ElevStick_1_1 = 0.0) then EngageORzero_Switch1_1_1 else ElevStick_1_1;
	-- Trace_end: Longitudinal_Guide_130/ManualOverride/Switch1;
	-- Trace_begin: Longitudinal_Guide_130/EngageORzero/LogicalOperator5;
	EngageORzero_LogicalOperator5_1_1 = LogicalOperator_1_1 and (if EngageORzero_zero10_1_1 = 0.0 then false else true);
	-- Trace_end: Longitudinal_Guide_130/EngageORzero/LogicalOperator5;
	-- Trace_begin: Longitudinal_Guide_130/EngageORzero/Switch1;
	EngageORzero_Switch1_1_1 = if EngageORzero_LogicalOperator5_1_1 then PitchInnerLoop_1_1 else EngageORzero_zero9_1_1;
	-- Trace_end: Longitudinal_Guide_130/EngageORzero/Switch1;
	-- Trace_begin: Longitudinal_Guide_130/EngageORzero/zero10;
	EngageORzero_zero10_1_1 = 1.0000000000;
	-- Trace_end: Longitudinal_Guide_130/EngageORzero/zero10;
	-- Trace_begin: Longitudinal_Guide_130/EngageORzero/zero9;
	EngageORzero_zero9_1_1 = 0.0000000000;
	-- Trace_end: Longitudinal_Guide_130/EngageORzero/zero9;
	-- Trace_begin: Longitudinal_Guide_130/k5;
	k5_1_1 = 1.0000000000 * FPAControl_1_1;
	-- Trace_end: Longitudinal_Guide_130/k5;
	-- Trace_begin: Longitudinal_Guide_130/ElevCmd;
	ElevCmd_1_1 = ManualOverride_Switch1_1_1;
	-- Trace_end: Longitudinal_Guide_130/ElevCmd;
	--!MAIN: true;
tel

