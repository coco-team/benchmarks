#open "dummy_lib"

const MatrixAndArrays_Constant_Value = [ [ 2.2, 3.3, 4.4, 2.2, 4.4, 3.3 ] ] ;
const MatrixAndArrays_Gain_Gain = [ [ 2.1, 1.0, 3.0, 4.2 ] ] ;
const MatrixAndArrays_UnitDelay_InitialValue = [ [ 1.1, 2.2, 1.0, 1.0 ] ] ;


node MatrixAndArrays (
	In1_Out1_11 : real^2^3)
returns (
	Out1_In1_57 : real^2^2) ;
var
	Gain_Out1_28 : real^2^2 ;
	Product_Out1_40 : real^2^2 ;
	UnitDelay_Out1_45 : real^2^2 ;
	Gain_In1_27 : real^2^2 ;
	Product_In1_38 : real^2^3 ;
	Product_In2_39 : real^3^2 ;
	UnitDelay_In1_44 : real^2^2 ;
let
	Gain_Out1_28 = _MatMul_real (2, 2, 2, MatrixAndArrays_Gain_Gain, Gain_In1_27) ;
	Product_Out1_40 = _MatMul_real (2, 3, Product_In1_38, Product_In2_39) ;
	UnitDelay_Out1_45 = MatrixAndArrays_UnitDelay_InitialValue -> pre UnitDelay_In1_44 ;
	Product_In1_38 = In1_Out1_11 ;
	Product_In2_39 = MatrixAndArrays_Constant_Value ;
	Gain_In1_27 = Product_Out1_40 ;
	UnitDelay_In1_44 = Gain_Out1_28 ;
	Out1_In1_57 = UnitDelay_Out1_45 ;
	--! MAIN : true ;
tel
