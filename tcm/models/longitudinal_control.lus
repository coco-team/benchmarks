-- Longitudianl Control

node VariableLimitSaturation ( uplim_Out1_286  : real ; SigIn_Out1_296  : real ; Lolim_Out1_306  : real  ) 
   returns ( Out1_In1_338  : real  ) ;
var Enforcelowlim_Out1_316  : real ;
 Enforceuplim_Out1_326  : real ;
 Enforcelowlim_In1_314  : real ;
 Enforcelowlim_In2_315  : real ;
 Enforceuplim_In1_324  : real ;
 Enforceuplim_In2_325  : real ;
  
let
Enforcelowlim_Out1_316  = if Enforcelowlim_In1_314 >= Enforcelowlim_In2_315 then Enforcelowlim_In2_315 else Enforcelowlim_In1_314;
Enforceuplim_Out1_326  = if Enforceuplim_In1_324 <= Enforceuplim_In2_325 then Enforceuplim_In1_324 else Enforceuplim_In2_325;
Out1_In1_338  = Enforceuplim_Out1_326;
Enforceuplim_In2_325  = uplim_Out1_286;
Enforceuplim_In1_324  = Enforcelowlim_Out1_316;
Enforcelowlim_In2_315  = SigIn_Out1_296;
Enforcelowlim_In1_314  = Lolim_Out1_306;
 tel 

node VariableRateLimit ( ratelim_Out1_209  : real ; input_Out1_219  : real ; ICtrig_Out1_229  : bool ; IC_Out1_239  : real  ) 
   returns ( output_In1_579  : real  ) ;
var Gain_Out1_248  : real ;
 Gain1_Out1_257  : real ;
 Sum2_Out1_267  : real ;
 VariableLimitSaturation_Out1_276  : real ;
 Add_Out1_392  : real ;
 Gain1Reset_Out1_409  : real ;
 Product_Out1_421  : real ;
 Product1_Out1_433  : real ;
 Product2_Out1_446  : real ;
 Sum1_Out1_456  : real ;
 Sum2Reset_Out1_466  : real ;
 Sum3_Out1_476  : real ;
 Sum4_Out1_486  : real ;
 delaysharp1_Out1_491  : real ;
 delaysharp2_Out1_496  : real ;
 delaysharp3_Out1_501  : bool ;
 eq0_Out1_507  : bool ;
 ne0_Out1_513  : bool ;
 ne1_Out1_519  : bool ;
 Gain_In1_247  : real ;
 Gain1_In1_256  : real ;
 Sum2_In1_265  : real ;
 Sum2_In2_266  : real ;
 VariableLimitSaturation_In1_273  : real ;
 VariableLimitSaturation_In2_274  : real ;
 VariableLimitSaturation_In3_275  : real ;
 Add_In1_390  : real ;
 Add_In2_391  : real ;
 Gain1Reset_In1_408  : real ;
 Product_In1_419  : real ;
 Product_In2_420  : real ;
 Product1_In1_431  : real ;
 Product1_In2_432  : real ;
 Product2_In1_443  : real ;
 Product2_In2_444  : real ;
 Product2_In3_445  : real ;
 Sum1_In1_454  : real ;
 Sum1_In2_455  : real ;
 Sum2Reset_In1_464  : real ;
 Sum2Reset_In2_465  : real ;
 Sum3_In1_474  : real ;
 Sum3_In2_475  : real ;
 Sum4_In1_484  : real ;
 Sum4_In2_485  : real ;
 delaysharp1_In1_490  : real ;
 delaysharp2_In1_495  : real ;
 delaysharp3_In1_500  : bool ;
 eq0_In1_505  : int ;
 eq0_In2_506  : int ;
 ne0_In1_511  : int ;
 ne0_In2_512  : int ;
 ne1_In1_517  : int ;
 ne1_In2_518  : int ;
  
let
Gain_Out1_248  =  20.0 * Gain_In1_247;
Gain1_Out1_257  = - 1.0 * Gain1_In1_256;
Sum2_Out1_267  = Sum2_In1_265 + - Sum2_In2_266;
VariableLimitSaturation_Out1_276  = VariableLimitSaturation ( VariableLimitSaturation_In1_273 , VariableLimitSaturation_In2_274 , VariableLimitSaturation_In3_275  );
Add_Out1_392  = Add_In1_390 + Add_In2_391;
Gain1Reset_Out1_409  = 1.000000 * Gain1Reset_In1_408;
Product_Out1_421  = Product_In1_419 * Product_In2_420;
Product1_Out1_433  = Product1_In1_431 * Product1_In2_432;
Product2_Out1_446  = Product2_In1_443 * ( Product2_In2_444 * Product2_In3_445  );
Sum1_Out1_456  = Sum1_In1_454 + Sum1_In2_455;
Sum2Reset_Out1_466  = Sum2Reset_In1_464 + Sum2Reset_In2_465;
Sum3_Out1_476  = - Sum3_In1_474 + Sum3_In2_475;
Sum4_Out1_486  = Sum4_In1_484 + Sum4_In2_485;
delaysharp1_Out1_491  = 1.000000 -> pre delaysharp1_In1_490;
delaysharp2_Out1_496  = 0.000000 -> pre delaysharp2_In1_495;
delaysharp3_Out1_501  = false -> pre delaysharp3_In1_500;
eq0_Out1_507  = eq0_In1_505 = eq0_In2_506;
ne0_Out1_513  = ne0_In1_511 <> ne0_In2_512;
ne1_Out1_519  = ne1_In1_517 <> ne1_In2_518;
Gain_In1_247  = Sum2_Out1_267;
VariableLimitSaturation_In2_274  = Gain_Out1_248;
Gain1_In1_256  = ratelim_Out1_209;
VariableLimitSaturation_In1_273  = ratelim_Out1_209;
VariableLimitSaturation_In3_275  = Gain1_Out1_257;
Sum2_In2_266  = delaysharp2_Out1_496;
output_In1_579  = delaysharp2_Out1_496;
Sum2_In1_265  = input_Out1_219;
Gain1Reset_In1_408  = VariableLimitSaturation_Out1_276;
Product_In1_419  = IC_Out1_239;
Sum3_In2_475  = IC_Out1_239;
delaysharp3_In1_500  = ICtrig_Out1_229;
ne0_In1_511  = if ICtrig_Out1_229 then 1 else 0;
eq0_In1_505  = if ICtrig_Out1_229 then 1 else 0;
delaysharp2_In1_495  = Sum1_Out1_456;
Sum1_In1_454  = Gain1Reset_Out1_409;
Sum3_In1_474  = delaysharp2_Out1_496;
Sum4_In1_484  = delaysharp2_Out1_496;
Sum1_In2_455  = Sum2Reset_Out1_466;
Sum2Reset_In2_465  = Product_Out1_421;
Product_In2_420  = delaysharp1_Out1_491;
delaysharp1_In1_490  = 0.000000;
ne1_In1_517  = if delaysharp3_Out1_501 then 1 else 0;
Product1_In1_431  = Sum3_Out1_476;
Product2_In2_444  = Sum3_Out1_476;
Product1_In2_432  = if ne0_Out1_513 then 1.000000 else 0.000000;
Product2_In1_443  = if eq0_Out1_507 then 1.000000 else 0.000000;
Add_In1_390  = Product1_Out1_433;
Add_In2_391  = Product2_Out1_446;
ne0_In2_512  = 0;
eq0_In2_506  = 0;
ne1_In2_518  = 0;
Product2_In3_445  = if ne1_Out1_519 then 1.000000 else 0.000000;
Sum2Reset_In1_464  = Sum4_Out1_486;
Sum4_In2_485  = Add_Out1_392;
 tel 



node AltitudeControl ( alteng_Out1_19  : real ; AltCmd_Out1_29  : real ; Altitude_Out1_39  : real ; gskts_Out1_49  : real ; hdot_Out1_59  : real  ) 
   returns (gammaCmd : real  ) ;
var Abs_Out1_62  : real ;
 Divide_Out1_118  : real ;
 Kh_Out1_127  : real ;
 LogicalOperator_Out1_132  : bool ;
 MinMax_Out1_142  : real ;
 MinMax1_Out1_152  : real ;
 Mux_Out1_156_0  : real ;
 Mux_Out1_156_1  : real ;
 Mux1_Out1_160_0  : real ;
 Mux1_Out1_160_1  : real ;
 Sum_Out1_170  : real ;
 Sum3_Out1_180  : real ;
 Switch_Out1_189  : real ;
 VariableRateLimit_Out1_199  : real ;
 VariableLimitSaturation0_Out1_599  : real ;
 k_Out1_675  : real ;
 kts2fps_Out1_684  : real ;
 r2d_Out1_848  : real ;
 Abs_In1_61  : real ;
 AltCtnlScope_In1_64_0  : real ;
 AltCtnlScope_In1_64_1  : real ;
 AltCtnlScope_In2_65_0  : real ;
 AltCtnlScope_In2_65_1  : real ;
 AltCtnlScope_In3_66  : real ;
 Divide_In1_116  : real ;
 Divide_In2_117  : real ;
 Kh_In1_126  : real ;
 LogicalOperator_In1_131  : bool ;
 MinMax_In1_140  : real ;
 MinMax_In2_141  : real ;
 MinMax1_In1_150  : real ;
 -- MinMax1_In2_151  : real ;
 Mux_In1_154  : real ;
 Mux_In2_155  : real ;
 Mux1_In1_158  : real ;
 Mux1_In2_159  : real ;
 Sum_In1_168  : real ;
 Sum_In2_169  : real ;
 Sum3_In1_178  : real ;
 Sum3_In2_179  : real ;
 Switch_In1_186  : real ;
 Switch_In2_187  : bool ;
 Switch_In3_188  : real ;
 -- VariableRateLimit_In1_195  : real ;
 VariableRateLimit_In2_196  : real ;
 VariableRateLimit_In3_197  : bool ;
 VariableRateLimit_In4_198  : real ;
 VariableLimitSaturation0_In1_596  : real ;
 VariableLimitSaturation0_In2_597  : real ;
 VariableLimitSaturation0_In3_598  : real ;
 k_In1_674  : real ;
 kts2fps_In1_683  : real ;
 r2d_In1_847  : real ;
 altgamcmd_In1_860  : real ;
  
let
gammaCmd = if (alteng_Out1_19 = 0.0) then 0.0 else   altgamcmd_In1_860;
Abs_Out1_62  = if Abs_In1_61 < 0.000000 then - Abs_In1_61 else Abs_In1_61;
Divide_Out1_118  = Divide_In1_116 * ( 1.000000 / Divide_In2_117  );
Kh_Out1_127  = 0.080000 * Kh_In1_126;
LogicalOperator_Out1_132  = not LogicalOperator_In1_131;
MinMax_Out1_142  = if MinMax_In1_140 <= MinMax_In2_141 then MinMax_In1_140 else MinMax_In2_141;
MinMax1_Out1_152  = if MinMax1_In1_150 >= 0.000100 then 0.000100 else MinMax1_In1_150;
Mux_Out1_156_0  = Mux_In1_154;
Mux_Out1_156_1  = Mux_In2_155;
Mux1_Out1_160_0  = Mux1_In1_158;
Mux1_Out1_160_1  = Mux1_In2_159;
Sum_Out1_170  = Sum_In1_168 + - Sum_In2_169;
Sum3_Out1_180  = Sum3_In1_178 + Sum3_In2_179;
Switch_Out1_189  = if Switch_In2_187 then Switch_In1_186 else Switch_In3_188;
VariableRateLimit_Out1_199  = VariableRateLimit ( 3.200000 , VariableRateLimit_In2_196 , VariableRateLimit_In3_197 , VariableRateLimit_In4_198  );
VariableLimitSaturation0_Out1_599  = VariableLimitSaturation( VariableLimitSaturation0_In1_596 , VariableLimitSaturation0_In2_597 , VariableLimitSaturation0_In3_598  );
k_Out1_675  = - 1.0 * k_In1_674;
kts2fps_Out1_684  = 1.687800 * kts2fps_In1_683;
r2d_Out1_848  = 57.295800 * r2d_In1_847;
Kh_In1_126  = Sum_Out1_170;
Sum_In1_168  = AltCmd_Out1_29;
Mux_In1_154  = AltCmd_Out1_29;
Sum_In2_169  = Altitude_Out1_39;
Mux_In2_155  = Altitude_Out1_39;
Abs_In1_61  = hdot_Out1_59;
VariableRateLimit_In4_198  = hdot_Out1_59;
Sum3_In1_178  = Abs_Out1_62;
Sum3_In2_179  = 10.0;
VariableLimitSaturation0_In3_598  = k_Out1_675;
k_In1_674  = Sum3_Out1_180;
VariableLimitSaturation0_In1_596  = Sum3_Out1_180;
LogicalOperator_In1_131  = if alteng_Out1_19 = 0.000000 then false else true;
AltCtnlScope_In3_66  = alteng_Out1_19;
Switch_In2_187  = if alteng_Out1_19 = 0.000000 then false else true;
kts2fps_In1_683  = gskts_Out1_49;
r2d_In1_847  = Divide_Out1_118;
altgamcmd_In1_860  = r2d_Out1_848;
VariableRateLimit_In3_197  = LogicalOperator_Out1_132;
Mux1_In1_158  = VariableLimitSaturation0_Out1_599;
VariableRateLimit_In2_196  = VariableLimitSaturation0_Out1_599;
Mux1_In2_159  = VariableRateLimit_Out1_199;
Divide_In1_116  = VariableRateLimit_Out1_199;
MinMax1_In1_150  = kts2fps_Out1_684;
Divide_In2_117  = MinMax_Out1_142;
VariableLimitSaturation0_In2_597  = Switch_Out1_189;
Switch_In1_186  = Kh_Out1_127;
Switch_In3_188  = 0.0;
AltCtnlScope_In1_64_0  = Mux_Out1_156_0;
AltCtnlScope_In1_64_1  = Mux_Out1_156_1;
AltCtnlScope_In2_65_0  = Mux1_Out1_160_0;
AltCtnlScope_In2_65_1  = Mux1_Out1_160_1;
MinMax_In1_140  = MinMax1_Out1_152;
MinMax_In2_141  = 1000.0;
 tel 


-- END Altitude Control

-- START FPA Control


node FPAControl ( engage_Out1_15  : real ; gamcmd_Out1_25  : real ; gamma_Out1_35  : real ; thetadeg_Out1_45  : real ; VT_Out1_55  : real  ) 
   returns ( PitchCmd_In1_487  : real) ;
var DynamicSaturation_Out1_64  : real ;
 KIgamerr_Out1_161  : real ;
 Kgamerr_Out1_170  : real ;
 LogicalOperator_Out1_175  : bool ;
 Mux_Out1_179_0  : real ;
 Mux_Out1_179_1  : real ;
 Mux1_Out1_183_0  : real ;
 Mux1_Out1_183_1  : real ;
 Product1_Out1_195  : real ;
 Sum_Out1_205  : real ;
 Sum1_Out1_215  : real ;
 Sum2_Out1_225  : real ;
 -- integratorreset_Out1_242  : real ;
 kt2fps_Out1_466  : real ;
 m1_Out1_475  : real ;
 DynamicSaturation_In1_61  : real ;
 DynamicSaturation_In2_62  : real ;
 DynamicSaturation_In3_63  : real ;
 FPAScope_In1_149  : real ;
 FPAScope_In2_150_0  : real ;
 FPAScope_In2_150_1  : real ;
 FPAScope_In3_151_0  : real ;
 FPAScope_In3_151_1  : real ;
 FPAScope_In4_152  : real ;
 KIgamerr_In1_160  : real ;
 Kgamerr_In1_169  : real ;
 LogicalOperator_In1_174  : bool ;
 Mux_In1_177  : real ;
 Mux_In2_178  : real ;
 Mux1_In1_181  : real ;
 Mux1_In2_182  : real ;
 Product1_In2_194  : real ;
 Sum_In1_203  : real ;
 Sum_In2_204  : real ;
 Sum1_In1_213  : real ;
 Sum1_In2_214  : real ;
 Sum2_In1_223  : real ;
 Sum2_In2_224  : real ;
 integratorreset_In1_239  : real ;
 integratorreset_In2_240  : bool ;
 integratorreset_In3_241  : real ;
 kt2fps_In1_465  : real ;
 m1_In1_474  : real ;
integratorreset_Out1_242 : real ; 
  
let
DynamicSaturation_Out1_64  = DynamicSaturation ( DynamicSaturation_In1_61 , DynamicSaturation_In2_62 , DynamicSaturation_In3_63  );
KIgamerr_Out1_161  = 1.0 * KIgamerr_In1_160;
Kgamerr_Out1_170  = 1.400000 * Kgamerr_In1_169;
LogicalOperator_Out1_175  = not LogicalOperator_In1_174;
Mux_Out1_179_0  = Mux_In1_177;
Mux_Out1_179_1  = Mux_In2_178;
Mux1_Out1_183_0  = Mux1_In1_181;
Mux1_Out1_183_1  = Mux1_In2_182;
Product1_Out1_195  = 276.738714 * Product1_In2_194;
Sum_Out1_205  = Sum_In1_203 + Sum_In2_204;
Sum1_Out1_215  = Sum1_In1_213 + - Sum1_In2_214;
Sum2_Out1_225  = Sum2_In1_223 + - Sum2_In2_224;
integratorreset_Out1_242  = IntegratorReset( integratorreset_In1_239 , integratorreset_In2_240 , integratorreset_In3_241  );
kt2fps_Out1_466  = 1.687800 * kt2fps_In1_465;
m1_Out1_475  = -1.0 * m1_In1_474;
PitchCmd_In1_487  = Sum1_Out1_215;
FPAScope_In4_152  = Sum1_Out1_215;
Sum1_In2_214  = Kgamerr_Out1_170;
Sum_In2_204  = Kgamerr_Out1_170;
Sum1_In1_213  = integratorreset_Out1_242;
Kgamerr_In1_169  = gamma_Out1_35;
Sum2_In2_224  = gamma_Out1_35;
Mux_In2_178  = gamma_Out1_35;
Sum_In1_203  = thetadeg_Out1_45;
integratorreset_In3_241  = Sum_Out1_205;
LogicalOperator_In1_174  = if engage_Out1_15 = 0.000000 then false else true;
FPAScope_In1_149  = engage_Out1_15;
integratorreset_In2_240  = LogicalOperator_Out1_175;
Product1_In2_194  = kt2fps_Out1_466;
m1_In1_474  = Product1_Out1_195;
DynamicSaturation_In1_61  = Product1_Out1_195;
kt2fps_In1_465  = VT_Out1_55;
integratorreset_In1_239  = DynamicSaturation_Out1_64;
Mux1_In2_182  = DynamicSaturation_Out1_64;
DynamicSaturation_In2_62  = KIgamerr_Out1_161;
DynamicSaturation_In3_63  = m1_Out1_475;
KIgamerr_In1_160  = Sum2_Out1_225;
Mux1_In1_181  = Sum2_Out1_225;
Sum2_In1_223  = gamcmd_Out1_25;
Mux_In1_177  = gamcmd_Out1_25;
FPAScope_In2_150_0  = Mux_Out1_179_0;
FPAScope_In2_150_1  = Mux_Out1_179_1;
FPAScope_In3_151_0  = Mux1_Out1_183_0;
FPAScope_In3_151_1  = Mux1_Out1_183_1;
 tel 


node FPA_ALT_Connection (AltGammaCmd  : real ; FpaCmd : real) 
   returns ( gammaCmd: real) ;
let
  gammaCmd = AltGammaCmd + FpaCmd;
tel



node Interpolate1dsharp0 ( In1_Out1_2078  : real ; x1_Out1_2088  : real ; x2_Out1_2098  : real ; y1_Out1_2108  : real ; y2_Out1_2118  : real  ) 
   returns ( Out1_In1_2183  : real  ) ;
var Add1_Out1_2128  : real ;
 Add2_Out1_2138  : real ;
 Add3_Out1_2148  : real ;
 Add4_Out1_2158  : real ;
 Divide_Out1_2171  : real ;
 Add1_In1_2126  : real ;
 Add1_In2_2127  : real ;
 Add2_In1_2136  : real ;
 Add2_In2_2137  : real ;
 Add3_In1_2146  : real ;
 Add3_In2_2147  : real ;
 Add4_In1_2156  : real ;
 Add4_In2_2157  : real ;
 Divide_In1_2168  : real ;
 Divide_In2_2169  : real ;
 Divide_In3_2170  : real ;
  
let
Add1_Out1_2128  = - Add1_In1_2126 + Add1_In2_2127;
Add2_Out1_2138  = Add2_In1_2136 + Add2_In2_2137;
Add3_Out1_2148  = - Add3_In1_2146 + Add3_In2_2147;
Add4_Out1_2158  = Add4_In1_2156 + - Add4_In2_2157;
Divide_Out1_2171  = Divide_In1_2168 * ( 1.000000 / Divide_In2_2169 * Divide_In3_2170  );
Out1_In1_2183  = Add2_Out1_2138;
Add2_In2_2137  = y1_Out1_2108;
Add3_In1_2146  = y1_Out1_2108;
Add1_In2_2127  = x2_Out1_2098;
Add1_In1_2126  = x1_Out1_2088;
Add4_In2_2157  = x1_Out1_2088;
Divide_In2_2169  = Add1_Out1_2128;
Add3_In2_2147  = y2_Out1_2118;
Divide_In3_2170  = Add3_Out1_2148;
Add2_In1_2136  = Divide_Out1_2171;
Divide_In1_2168  = Add4_Out1_2158;
Add4_In1_2156  = In1_Out1_2078;
 tel 

node Interpolate1dsharp1 ( In1_Out1_2216  : real ; x1_Out1_2226  : real ; x2_Out1_2236  : real ; y1_Out1_2246  : real ; y2_Out1_2256  : real  ) 
   returns ( Out1_In1_2321  : real  ) ;
var Add1_Out1_2266  : real ;
 Add2_Out1_2276  : real ;
 Add3_Out1_2286  : real ;
 Add4_Out1_2296  : real ;
 Divide_Out1_2309  : real ;
 Add1_In1_2264  : real ;
 Add1_In2_2265  : real ;
 Add2_In1_2274  : real ;
 Add2_In2_2275  : real ;
 Add3_In1_2284  : real ;
 Add3_In2_2285  : real ;
 Add4_In1_2294  : real ;
 Add4_In2_2295  : real ;
 Divide_In1_2306  : real ;
 Divide_In2_2307  : real ;
 Divide_In3_2308  : real ;
  
let
Add1_Out1_2266  = - Add1_In1_2264 + Add1_In2_2265;
Add2_Out1_2276  = Add2_In1_2274 + Add2_In2_2275;
Add3_Out1_2286  = - Add3_In1_2284 + Add3_In2_2285;
Add4_Out1_2296  = Add4_In1_2294 + - Add4_In2_2295;
Divide_Out1_2309  = Divide_In1_2306 * ( 1.000000 / Divide_In2_2307 * Divide_In3_2308  );
Out1_In1_2321  = Add2_Out1_2276;
Add2_In2_2275  = y1_Out1_2246;
Add3_In1_2284  = y1_Out1_2246;
Add1_In2_2265  = x2_Out1_2236;
Add1_In1_2264  = x1_Out1_2226;
Add4_In2_2295  = x1_Out1_2226;
Divide_In2_2307  = Add1_Out1_2266;
Add3_In2_2285  = y2_Out1_2256;
Divide_In3_2308  = Add3_Out1_2286;
Add2_In1_2274  = Divide_Out1_2309;
Divide_In1_2306  = Add4_Out1_2296;
Add4_In1_2294  = In1_Out1_2216;
 tel 

node Interpolate1dsharp2 ( In1_Out1_2354  : real ; x1_Out1_2364  : real ; x2_Out1_2374  : real ; y1_Out1_2384  : real ; y2_Out1_2394  : real  ) 
   returns ( Out1_In1_2459  : real  ) ;
var Add1_Out1_2404  : real ;
 Add2_Out1_2414  : real ;
 Add3_Out1_2424  : real ;
 Add4_Out1_2434  : real ;
 Divide_Out1_2447  : real ;
 Add1_In1_2402  : real ;
 Add1_In2_2403  : real ;
 Add2_In1_2412  : real ;
 Add2_In2_2413  : real ;
 Add3_In1_2422  : real ;
 Add3_In2_2423  : real ;
 Add4_In1_2432  : real ;
 Add4_In2_2433  : real ;
 Divide_In1_2444  : real ;
 Divide_In2_2445  : real ;
 Divide_In3_2446  : real ;
  
let
Add1_Out1_2404  = - Add1_In1_2402 + Add1_In2_2403;
Add2_Out1_2414  = Add2_In1_2412 + Add2_In2_2413;
Add3_Out1_2424  = - Add3_In1_2422 + Add3_In2_2423;
Add4_Out1_2434  = Add4_In1_2432 + - Add4_In2_2433;
Divide_Out1_2447  = Divide_In1_2444 * ( 1.000000 / Divide_In2_2445 * Divide_In3_2446  );
Out1_In1_2459  = Add2_Out1_2414;
Add2_In2_2413  = y1_Out1_2384;
Add3_In1_2422  = y1_Out1_2384;
Add1_In2_2403  = x2_Out1_2374;
Add1_In1_2402  = x1_Out1_2364;
Add4_In2_2433  = x1_Out1_2364;
Divide_In2_2445  = Add1_Out1_2404;
Add3_In2_2423  = y2_Out1_2394;
Divide_In3_2446  = Add3_Out1_2424;
Add2_In1_2412  = Divide_Out1_2447;
Divide_In1_2444  = Add4_Out1_2434;
Add4_In1_2432  = In1_Out1_2354;
 tel
node PI_Lookup1d ( In1_Out1_1989  : real  ) 
   returns ( Out1_In1_2565  : real  ) ;
var Add_Out1_2000  : real ;
 branchsharp1_Out1_2013  : real ;
 branchsharp2_Out1_2026  : real ;
 branchsharp3_Out1_2039  : real ;
 gte1_Out1_2045  : bool ;
 gte2_Out1_2051  : bool ;
 gte3_Out1_2057  : bool ;
 interpolate1dsharp0_Out1_2068  : real ;
 interpolate1dsharp1_Out1_2206  : real ;
 interpolate1dsharp2_Out1_2344  : real ;
 lte1_Out1_2477  : bool ;
 lte2_Out1_2483  : bool ;
 lte3_Out1_2489  : bool ;
 Add_In1_1997  : real ;
 Add_In2_1998  : real ;
 Add_In3_1999  : real ;
 branchsharp1_In1_2010  : real ;
 branchsharp1_In2_2011  : real ;
 branchsharp1_In3_2012  : real ;
 branchsharp2_In1_2023  : real ;
 branchsharp2_In2_2024  : real ;
 branchsharp2_In3_2025  : real ;
 branchsharp3_In1_2036  : real ;
 branchsharp3_In2_2037  : real ;
 branchsharp3_In3_2038  : real ;
 gte1_In1_2043  : real ;
 gte1_In2_2044  : real ;
 gte2_In1_2049  : real ;
 gte2_In2_2050  : real ;
 gte3_In1_2055  : real ;
 gte3_In2_2056  : real ;
 interpolate1dsharp0_In1_2063  : real ;
 interpolate1dsharp0_In2_2064  : real ;
 interpolate1dsharp0_In3_2065  : real ;
 interpolate1dsharp0_In4_2066  : real ;
 interpolate1dsharp0_In5_2067  : real ;
 interpolate1dsharp1_In1_2201  : real ;
 interpolate1dsharp1_In2_2202  : real ;
 interpolate1dsharp1_In3_2203  : real ;
 interpolate1dsharp1_In4_2204  : real ;
 interpolate1dsharp1_In5_2205  : real ;
 interpolate1dsharp2_In1_2339  : real ;
 interpolate1dsharp2_In2_2340  : real ;
 interpolate1dsharp2_In3_2341  : real ;
 interpolate1dsharp2_In4_2342  : real ;
 interpolate1dsharp2_In5_2343  : real ;
 lte1_In1_2475  : real ;
 lte1_In2_2476  : real ;
 lte2_In1_2481  : real ;
 lte2_In2_2482  : real ;
 lte3_In1_2487  : real ;
 lte3_In2_2488  : real ;
  
let
Add_Out1_2000  = Add_In1_1997 + ( Add_In2_1998 + Add_In3_1999  );
branchsharp1_Out1_2013  = branchsharp1_In1_2010 * ( branchsharp1_In2_2011 * branchsharp1_In3_2012  );
branchsharp2_Out1_2026  = branchsharp2_In1_2023 * ( branchsharp2_In2_2024 * branchsharp2_In3_2025  );
branchsharp3_Out1_2039  = branchsharp3_In1_2036 * ( branchsharp3_In2_2037 * branchsharp3_In3_2038  );
gte1_Out1_2045  = gte1_In1_2043 <= gte1_In2_2044;
gte2_Out1_2051  = gte2_In1_2049 <= gte2_In2_2050;
gte3_Out1_2057  = gte3_In1_2055 <= gte3_In2_2056;
interpolate1dsharp0_Out1_2068  = Interpolate1dsharp0 ( interpolate1dsharp0_In1_2063 , interpolate1dsharp0_In2_2064 , interpolate1dsharp0_In3_2065 , interpolate1dsharp0_In4_2066 , interpolate1dsharp0_In5_2067  );
interpolate1dsharp1_Out1_2206  = Interpolate1dsharp1 ( interpolate1dsharp1_In1_2201 , interpolate1dsharp1_In2_2202 , interpolate1dsharp1_In3_2203 , interpolate1dsharp1_In4_2204 , interpolate1dsharp1_In5_2205  );
interpolate1dsharp2_Out1_2344  = Interpolate1dsharp2 ( interpolate1dsharp2_In1_2339 , interpolate1dsharp2_In2_2340 , interpolate1dsharp2_In3_2341 , interpolate1dsharp2_In4_2342 , interpolate1dsharp2_In5_2343  );
lte1_Out1_2477  = lte1_In1_2475 >= lte1_In2_2476;
lte2_Out1_2483  = lte2_In1_2481 > lte2_In2_2482;
lte3_Out1_2489  = lte3_In1_2487 > lte3_In2_2488;
gte3_In2_2056  = 500.000000;
interpolate1dsharp2_In3_2341  = 500.000000;
gte2_In2_2050  = 350.000000;
interpolate1dsharp1_In3_2203  = 350.000000;
lte3_In2_2488  = 350.000000;
interpolate1dsharp2_In2_2340  = 350.000000;
gte1_In2_2044  = 120.000000;
interpolate1dsharp0_In3_2065  = 120.000000;
lte2_In2_2482  = 120.000000;
interpolate1dsharp1_In2_2202  = 120.000000;
lte1_In2_2476  = 0.000000;
interpolate1dsharp0_In2_2064  = 0.000000;
gte1_In1_2043  = In1_Out1_1989;
lte2_In1_2481  = In1_Out1_1989;
gte2_In1_2049  = In1_Out1_1989;
lte3_In1_2487  = In1_Out1_1989;
gte3_In1_2055  = In1_Out1_1989;
interpolate1dsharp2_In1_2339  = In1_Out1_1989;
interpolate1dsharp1_In1_2201  = In1_Out1_1989;
lte1_In1_2475  = In1_Out1_1989;
interpolate1dsharp0_In1_2063  = In1_Out1_1989;
branchsharp1_In1_2010  = interpolate1dsharp0_Out1_2068;
interpolate1dsharp2_In5_2343  = 0.300000;
interpolate1dsharp2_In4_2342  = 0.300000;
interpolate1dsharp1_In5_2205  = 0.300000;
interpolate1dsharp1_In4_2204  = 1.000000;
interpolate1dsharp0_In5_2067  = 1.000000;
interpolate1dsharp0_In4_2066  = 1.000000;
branchsharp3_In1_2036  = interpolate1dsharp2_Out1_2344;
branchsharp2_In1_2023  = interpolate1dsharp1_Out1_2206;
branchsharp1_In2_2011  = if lte1_Out1_2477 then 1.000000 else 0.000000;
branchsharp1_In3_2012  = if gte1_Out1_2045 then 1.000000 else 0.000000;
branchsharp2_In2_2024  = if lte2_Out1_2483 then 1.000000 else 0.000000;
branchsharp2_In3_2025  = if gte2_Out1_2051 then 1.000000 else 0.000000;
branchsharp3_In2_2037  = if lte3_Out1_2489 then 1.000000 else 0.000000;
branchsharp3_In3_2038  = if gte3_Out1_2057 then 1.000000 else 0.000000;
Add_In1_1997  = branchsharp1_Out1_2013;
Add_In2_1998  = branchsharp2_Out1_2026;
Add_In3_1999  = branchsharp3_Out1_2039;
Out1_In1_2565  = Add_Out1_2000;
 tel 

node PI_TransferFunc ( u_Out1_1877  : real  ) 
   returns ( y_In1_1960  : real  ) ;
var asharp1_Out1_1886  : real ;
 b0sharp0_Out1_1895  : real ;
 b0sharp1_Out1_1904  : real ;
 delaysharp1_Out1_1909  : real ;
 outputsum_Out1_1919  : real ;
 samplesharp1_Out1_1928  : real ;
 sum11_Out1_1938  : real ;
 sum21_Out1_1948  : real ;
 asharp1_In1_1885  : real ;
 b0sharp0_In1_1894  : real ;
 b0sharp1_In1_1903  : real ;
 delaysharp1_In1_1908  : real ;
 outputsum_In1_1917  : real ;
 outputsum_In2_1918  : real ;
 samplesharp1_In1_1927  : real ;
 sum11_In1_1936  : real ;
 sum11_In2_1937  : real ;
 sum21_In1_1946  : real ;
 sum21_In2_1947  : real ;
  
let
asharp1_Out1_1886  = 0.062500 * asharp1_In1_1885;
b0sharp0_Out1_1895  = b0sharp0_In1_1894;
b0sharp1_Out1_1904  = - b0sharp1_In1_1903;
delaysharp1_Out1_1909  = 0.000000 -> pre delaysharp1_In1_1908;
outputsum_Out1_1919  = outputsum_In1_1917 + outputsum_In2_1918;
samplesharp1_Out1_1928  = 0.020000 * samplesharp1_In1_1927;
sum11_Out1_1938  = sum11_In1_1936 + - sum11_In2_1937;
sum21_Out1_1948  = sum21_In1_1946 + sum21_In2_1947;
asharp1_In1_1885  = delaysharp1_Out1_1909;
sum21_In2_1947  = delaysharp1_Out1_1909;
sum11_In2_1937  = asharp1_Out1_1886;
b0sharp1_In1_1903  = asharp1_Out1_1886;
outputsum_In1_1917  = b0sharp0_Out1_1895;
outputsum_In2_1918  = b0sharp1_Out1_1904;
samplesharp1_In1_1927  = sum11_Out1_1938;
sum21_In1_1946  = samplesharp1_Out1_1928;
delaysharp1_In1_1908  = sum21_Out1_1948;
sum11_In1_1936  = u_Out1_1877;
b0sharp0_In1_1894  = u_Out1_1877;
y_In1_1960  = outputsum_Out1_1919;
 tel 

node PitchInnerLoop ( PitchCmd_Out1_1769  : real ; Pitch_Out1_1779  : real ; qdeg_Out1_1789  : real ; CAS_Out1_1799  : real  ) 
   returns ( ElevCmd_In1_2617  : real  ) ;
var Kpitch_Out1_1808  : real ;
 Kwo_Out1_1817  : real ;
 Mux_Out1_1821_0  : real ;
 Mux_Out1_1821_1  : real ;
 Product_Out1_1840  : real ;
 Sum_Out1_1850  : real ;
 Sum1_Out1_1860  : real ;
 TransferFunc_Out1_1867  : real ;
 lookup1d_Out1_1979  : real ;
 Kpitch_In1_1807  : real ;
 Kwo_In1_1816  : real ;
 Mux_In1_1819  : real ;
 Mux_In2_1820  : real ;
 Product_In1_1838  : real ;
 Product_In2_1839  : real ;
 Sum_In1_1848  : real ;
 Sum_In2_1849  : real ;
 Sum1_In1_1858  : real ;
 Sum1_In2_1859  : real ;
 TransferFunc_In1_1866  : real ;
 lookup1d_In1_1978  : real ;
  
let
Kpitch_Out1_1808  = 2.000000 * Kpitch_In1_1807;
Kwo_Out1_1817  = 0.500000 * Kwo_In1_1816;
Mux_Out1_1821_0  = Mux_In1_1819;
Mux_Out1_1821_1  = Mux_In2_1820;
Product_Out1_1840  = Product_In1_1838 * Product_In2_1839;
Sum_Out1_1850  = Sum_In1_1848 + - Sum_In2_1849;
Sum1_Out1_1860  = - Sum1_In1_1858 + Sum1_In2_1859;
TransferFunc_Out1_1867  = PI_TransferFunc ( TransferFunc_In1_1866  );
lookup1d_Out1_1979  = PI_Lookup1d ( lookup1d_In1_1978  );
Kpitch_In1_1807  = Sum_Out1_1850;
Sum_In2_1849  = Pitch_Out1_1779;
Mux_In2_1820  = Pitch_Out1_1779;
Sum1_In1_1858  = Kpitch_Out1_1808;
TransferFunc_In1_1866  = qdeg_Out1_1789;
Kwo_In1_1816  = TransferFunc_Out1_1867;
lookup1d_In1_1978  = CAS_Out1_1799;
Product_In1_1838  = Sum1_Out1_1860;
Product_In2_1839  = lookup1d_Out1_1979;
ElevCmd_In1_2617  = Product_Out1_1840;
Sum1_In2_1859  = Kwo_Out1_1817;
Sum_In1_1848  = PitchCmd_Out1_1769;
Mux_In1_1819  = PitchCmd_Out1_1769;
 tel 


node LongitudinalControl ( FPACmd_Out1_178  : real ; AntEng_Out1_188  : real ; FpaEng_Out1_198  : real ; AltCmd_Out1_208  : real ; Alt_Out1_218  : real ; thetaDeg_Out1_228  : real ; qDeg_Out1_238  : real ; GsKts_Out1_248  : real ; hdot_Out1_258  : real ; VT_Out1_268  : real ; Gamma_Out1_278  : real ; CAS_Out1_288  : real ; ElevStick_Out1_298  : real  ) 
   returns ( ElevCmd_In1_2676  : real  ) ;
var AltitudeControl_Out1_309  : real ;
 EngageORzero_Out1_1078  : real ;
 FPAControl_Out1_1158  : real ;
 LogicalOperator_Out1_1696  : bool ;
 ManualOverride_Out1_1704  : real ;
 PitchInnerLoop_Out1_1759  : real ;
 Sum7_Out1_2646  : real ;
 k2_Out1_2655  : real ;
 k5_Out1_2664  : real ;
 AltitudeControl_In1_304  : real ;
 AltitudeControl_In2_305  : real ;
 AltitudeControl_In3_306  : real ;
 AltitudeControl_In4_307  : real ;
 AltitudeControl_In5_308  : real ;
 EngageORzero_In1_1076  : bool ;
 EngageORzero_In2_1077  : real ;
 FPAControl_In1_1153  : real ;
 FPAControl_In2_1154  : real ;
 FPAControl_In3_1155  : real ;
 FPAControl_In4_1156  : real ;
 FPAControl_In5_1157  : real ;
 LogicalOperator_In1_1694  : bool ;
 LogicalOperator_In2_1695  : bool ;
 ManualOverride_In1_1702  : real ;
 ManualOverride_In2_1703  : real ;
 PitchInnerLoop_In1_1755  : real ;
 PitchInnerLoop_In2_1756  : real ;
 PitchInnerLoop_In3_1757  : real ;
 PitchInnerLoop_In4_1758  : real ;
 Sum7_In1_2644  : real ;
 Sum7_In2_2645  : real ;
 k2_In1_2654  : real ;
 k5_In1_2663  : real ;
  
let
AltitudeControl_Out1_309  = AltitudeControl ( AltitudeControl_In1_304 , AltitudeControl_In2_305 , AltitudeControl_In3_306 , AltitudeControl_In4_307 , AltitudeControl_In5_308  );
EngageORzero_Out1_1078  = EngageORzero ( EngageORzero_In1_1076 , EngageORzero_In2_1077  );
FPAControl_Out1_1158  = FPAControl ( FPAControl_In1_1153 , FPAControl_In2_1154 , FPAControl_In3_1155 , FPAControl_In4_1156 , FPAControl_In5_1157  );
LogicalOperator_Out1_1696  = LogicalOperator_In1_1694 or LogicalOperator_In2_1695;
ManualOverride_Out1_1704  = ManualOverride ( ManualOverride_In1_1702 , ManualOverride_In2_1703  );
PitchInnerLoop_Out1_1759  = PitchInnerLoop ( PitchInnerLoop_In1_1755 , PitchInnerLoop_In2_1756 , PitchInnerLoop_In3_1757 , PitchInnerLoop_In4_1758  );
Sum7_Out1_2646  = Sum7_In1_2644 + Sum7_In2_2645;
k2_Out1_2655  =  k2_In1_2654;
k5_Out1_2664  = k5_In1_2663;
Sum7_In2_2645  = k2_Out1_2655;
AltitudeControl_In3_306  = Alt_Out1_218;
PitchInnerLoop_In2_1756  = thetaDeg_Out1_228;
FPAControl_In4_1156  = thetaDeg_Out1_228;
FPAControl_In3_1155  = Gamma_Out1_278;
AltitudeControl_In2_305  = AltCmd_Out1_208;
ElevCmd_In1_2676  = ManualOverride_Out1_1704;
k2_In1_2654  = AltitudeControl_Out1_309;
k5_In1_2663  = FPAControl_Out1_1158;
AltitudeControl_In5_308  = hdot_Out1_258;
FPAControl_In2_1154  = Sum7_Out1_2646;
PitchInnerLoop_In3_1757  = qDeg_Out1_238;
AltitudeControl_In4_307  = GsKts_Out1_248;
FPAControl_In5_1157  = VT_Out1_268;
Sum7_In1_2644  = FPACmd_Out1_178;
PitchInnerLoop_In1_1755  = k5_Out1_2664;
FPAControl_In1_1153  = FpaEng_Out1_198;
LogicalOperator_In2_1695  = if FpaEng_Out1_198 = 0.000000 then false else true;
PitchInnerLoop_In4_1758  = CAS_Out1_288;
LogicalOperator_In1_1694  = if AntEng_Out1_188 = 0.000000 then false else true;
AltitudeControl_In1_304  = AntEng_Out1_188;
ManualOverride_In1_1702  = ElevStick_Out1_298;
EngageORzero_In2_1077  = PitchInnerLoop_Out1_1759;
ManualOverride_In2_1703  = EngageORzero_Out1_1078;
EngageORzero_In1_1076  = LogicalOperator_Out1_1696;
 tel 
