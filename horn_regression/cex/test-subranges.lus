node X(i1: subrange [-7, 6] of int; 
       i2: subrange [0, 3] of int; 
       j: int) 
returns ();
var 
  a: subrange [0, 6] of int;
  b: subrange [0, 2] of int;
let 
  a = j mod i1;
  b = j mod i2;
tel;


node Y(i: bool; j: int) returns ();
var
  a: subrange [0, 1] of int;
  b: subrange [0, 3] of int;
let
  a = if i then 0 else 1;
  b = if i then j mod 3 else j mod 4;
tel
  
node Z(i: subrange[0, 2] of int; j: subrange [-3, -2] of int) returns (e: int);
var 
  a: subrange [1, 3] of int; 
  b: subrange [0, 4] of int; 
  c: subrange [-3, 0] of int;
  d: subrange [0, 0] of int;
let
  a = i + 1;
  b = i + i;
  c = i + j;
  d = i - i;
  e = a+b+c+d;
tel

node U(i: subrange [1, 2] of int) returns (o: subrange [1, 2] of int);
let 
  o = 0 -> i;
tel

node top(i: subrange[0, 2] of int; j: subrange [-3, -2] of int) returns (out: bool);
var e: int;
let
  e = Z(i, j);
  out = e >0;
  --!PROPERTY : out;
tel