
node Switch(on, off: bool) returns (s: bool);
let
  s = if (false -> pre s) then not off else on; 
tel

node Count(reset, x: bool) returns (c: int);
let
  c = if reset then 0
      else if x then (0 -> pre c) + 1
      else (0 -> pre c);
tel

node top(on_off, reset, freeze: bool) returns (out: bool);
var
  running, freezed: bool;
  cpt: int;
  time_is_positive, time_is_less_than_three: bool;
  time: int;
let
  running = Switch(on_off, on_off);
  freezed = Switch(freeze and running,
                   freeze or on_off);
  cpt = Count(reset and not running, running);
  time = if freezed then (0 -> pre time) else cpt;

  time_is_positive = time >= 0;
  time_is_less_than_three = time < 3;
  out = time_is_less_than_three = true;
  
  --!PROPERTY :  out;
tel
