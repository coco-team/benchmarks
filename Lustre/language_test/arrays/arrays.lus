node add_vect_3 (in1,in2 : int^2) returns (out : int^2)
var t:int;
let
 t = in1[0];
out = [t+in2[0],in1[1]+in2[1]];
tel

node min_vect_2 (in : int^2) returns (out: int)
let
	out = if (in[0] < in[1]) then in[0] else in[1];
tel

node mumuse (in1 : int^2^2; mult : int) returns (out : int^4)
var
	tmp : int^2^2;
	tmp2 : int^2;
let
	tmp = [ [ in1[0][0]*mult , in1[0][1] ] , [ in1[1][0]*mult , in1[1][1] ] ];

	tmp2 = add_vect_3 ( tmp[0] , [ mult,mult ] );

	out = [ tmp[0][0] , min_vect_2 (tmp2) , tmp[0][1] , tmp2[1] ];
tel
